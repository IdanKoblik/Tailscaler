# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: [ "7-cicd" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.2'

      - name: Build API
        working-directory: ./api
        run: go build

      - name: Test API
        working-directory: ./api
        run: go test -v ./...

      - name: Build CLI
        working-directory: ./cli
        run: go build

      - name: Test CLI
        working-directory: ./cli
        run: go test -v ./...

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          token: ${{ github.token }}
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        with:
          token: ${{ github.token }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api/api
          asset_name: api-${{ github.ref_name }}-${{ github.run_id }}.zip
          asset_content_type: application/zip

      - name: Upload CLI Release Artifact
        uses: actions/upload-release-asset@v1
        with:
          token: ${{ github.token }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cli/cli
          asset_name: cli-${{ github.ref_name }}-${{ github.run_id }}.zip
          asset_content_type: application/zip